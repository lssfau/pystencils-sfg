# This file acts as an index for the generator script test suite.
# For information about its structure and valid parameters, refer to the Readme.md in this folder.

# Configuration

TestConfigModule:
  sfg-args:
    file-extensions: [h++, c++]
    config-module: "config/TestConfigModule_cfg.py"

TestExtraCommandLineArgs:
  sfg-args:
    file-extensions: [h++, c++]
  extra-args: [--precision, float32, test1, test2]

TestIllegalArgs:
  extra-args: [--sfg-file-extensionss, ".c++,.h++"]
  expect-failure: true

TestIncludeSorting:
  sfg-args:
    header-only: true
  expect-code:
    hpp:
      - regex: >-
          #include\s\<memory>\s*
          #include\s<vector>\s*
          #include\s<array>
        strip-whitespace: true

# Basic Composer Functionality

BasicDefinitions:
  sfg-args:
    header-only: true
  expect-code:
    hpp:
      - regex: >-
          #include\s\"config\.h\"(\s|.)*
          namespace\s+awesome\s+{\s+.+\s+
          #define\sPI\s3\.1415\s+
          using\snamespace\sstd\;\s+
          }\s\/\/\s+namespace\sawesome
        strip-whitespace: true

SimpleClasses:
  sfg-args:
    header-only: true

ComposerFeatures:
  expect-code:
    hpp:
      - regex: >-
          \[\[nodiscard\]\]\s*static\s*double\s*geometric\(\s*double\s*q,\s*uint64_t\s*k\)

ComposerHeaderOnly:
  sfg-args:
    header-only: true
  expect-code:
    hpp:
      - regex: >-
          inline\s+int32_t\s+twice\s*\(
      - regex: >-
          inline\s+void\s+kernel\s*\(

Conditionals:
  expect-code:
    cpp:
      - regex: switch\s*\(\s*noodle\s*\)\s*\{\s*
        count: 2
      - regex: case\s+Noodles::[A-Z]+:\s*\{\s*.*\s*break;\s*\}
        count: 2
      - regex: case\s+Noodles::[A-Z]+:\s*\{\s*return\s[0-9]+;\s*\}
        count: 4
      - regex: if\s*\(\s*noodle\s==\sNoodles::RIGATONI\s\|\|\snoodle\s==\sNoodles::SPAGHETTI\s*\)
        count: 1

NestedNamespaces:
  sfg-args:
    header-only: true

# Kernel Generation

ScaleKernel:
JacobiMdspan:
StlContainers1D:
VectorExtraction:

# std::mdspan

MdSpanFixedShapeLayouts:
MdSpanLbStreaming:

# CUDA

CudaKernels:
  sfg-args:
    file-extensions: ["hpp", "cu"]
  compile:
    cxx: nvcc
    cxx-flags: 
      - -std=c++20
      - -Werror
      - all-warnings
      - --expt-relaxed-constexpr
    skip-if-not-found: true

# HIP

HipKernels:
  sfg-args:
    file-extensions: ["hpp", "hip"]
  compile:
    cxx: hipcc
    cxx-flags: 
      - -std=c++20
      - -Wall
      - -Werror
    skip-if-not-found: true

# SYCL

SyclKernels:
  sfg-args:
    header-only: true
  expect-code:
    hpp:
      - regex: >-
          inline\s+void\s+kernel\s*\(
      - regex: >-
          cgh\.parallel_for\(range,\s*\[=\]\s*\(const\s+sycl::item<\s*2\s*>\s+sycl_item\s*\)\s*\{\s*kernels::kernel\(.*\);\s*\}\);

SyclBuffers:
  compile:
    cxx: icpx
    cxx-flags:
      - -fsycl
      - -std=c++20
      - -Wall
      - -Werror
    link-flags:
      - -fsycl
    skip-if-not-found: true
